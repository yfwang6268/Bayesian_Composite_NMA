source("~/Github/Bayesian_Composite_NMA/simulation/Bayesian_full_likelihood_equal_correlation.R", echo=TRUE)
source("~/Github/Bayesian_Composite_NMA/simulation/Bayesian_full_likelihood_equal_correlation.R", echo=TRUE)
source("~/Github/Bayesian_Composite_NMA/simulation/Bayesian_full_likelihood_equal_correlation.R", echo=TRUE)
source("~/Github/Bayesian_Composite_NMA/simulation/Bayesian_full_likelihood_equal_correlation.R", echo=TRUE)
source("~/Github/Bayesian_Composite_NMA/simulation/Bayesian_full_likelihood_equal_correlation.R", echo=TRUE)
colMeans(posterior_mu)
rm(list())
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
mu1 = c(0.5,1)
mu2 = c(0,-0.5)
mu1[3] = mu1[1] - mu1[2]
mu2[3] = mu2[1] - mu2[2]
mu = c(mu1, mu2)
# setting 2
setting2_mu = NULL
setting2_var = NULL
setting3_mu = NULL
setting3_var = NULL
setting4_mu = NULL
setting4_var = NULL
for(i in 1:4){
setting2_filename = paste("sim_result_noadjust_large_sample_seed",i,"_2023-06-08.RData", sep="")
setting3_filename = paste("simulation_result_no_adjustment_unequal_correlation_seed",i,"_2023-06-08.RData", sep="")
setting4_filename = paste("simulation_result_no_adjustment_unequal_correlation_large_studies_seed",i,"_2023-06-08.RData", sep="")
load(setting2_filename)
setting2_mu = rbind(setting2_mu, posterior_mu)
setting2_var = rbind(setting2_var, mu_var_posterior)
load(setting3_filename)
setting3_mu = rbind(setting3_mu, posterior_mu)
setting3_var = rbind(setting3_var, mu_var_posterior)
load(setting4_filename)
setting4_mu = rbind(setting4_mu, posterior_mu)
setting4_var = rbind(setting4_var, mu_var_posterior)
}
setting2_estiamte_mu = colMeans(setting2_mu)
setting3_estiamte_mu = colMeans(setting3_mu)
setting4_estiamte_mu = colMeans(setting4_mu)
setting2_estiamte_var = colMeans(setting2_var)
setting3_estiamte_var = colMeans(setting3_var)
setting4_estiamte_var = colMeans(setting4_var)
load("netmeta_simulation_2023-06-09.RData")
netmeta_setting1_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting1_estimate_mu = colMeans(netmeta_setting1_mu)
netmeta_setting1_estimate_var = apply(netmeta_setting1_mu,2,var)
load("netmeta_sim_large_sample_2023-06-09.RData")
netmeta_setting2_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting2_estimate_mu = colMeans(netmeta_setting2_mu)
netmeta_setting2_estimate_var = apply(netmeta_setting2_mu,2,var)
load("netmeta_sim_unequal_correlation_2023-06-09.RData")
netmeta_setting3_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting3_estimate_mu = colMeans(netmeta_setting3_mu)
netmeta_setting3_estimate_var = apply(netmeta_setting3_mu,2,var)
load("netmeta_sim_large_sample_unequal_correlation_2023-06-09.RData")
netmeta_setting4_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting4_estimate_mu = colMeans(netmeta_setting4_mu)
netmeta_setting4_estimate_var = apply(netmeta_setting4_mu,2,var)
laod("gemtc_simu_no_adjust_2023-06-09.RData")
rm(list=ls())
load("gemtc_simu_no_adjust_2023-06-09.RData")
load("gemtc_simu_no_adjust_2023-06-09.RData")
gemtc_setting1_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting1_estimate_mu = colMeans(gemtc_setting1_mu)
load("gemtc_simu_large_sample_2023-06-09.RData")
gemtc_setting2_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting2_estimate_mu = colMeans(gemtc_setting2_mu)
load("gemtc_simu_unequal_correlation_2023-06-09.RData")
gemtc_setting3_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting3_estimate_mu = colMeans(gemtc_setting3_mu)
load("gemtc_simu_large_sample_2023-06-09.RData")
gemtc_setting4_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting4_estimate_mu = colMeans(gemtc_setting4_mu)
load("gemtc_simu_no_adjust_2023-06-09.RData")
gemtc_setting1_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting1_estimate_mu = colMeans(gemtc_setting1_mu)
load("gemtc_simu_large_sample_2023-06-09.RData")
gemtc_setting2_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting2_estimate_mu = colMeans(gemtc_setting2_mu)
load("gemtc_simu_unequal_correlation_2023-06-09.RData")
gemtc_setting3_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting3_estimate_mu = colMeans(gemtc_setting3_mu)
load("gemtc_simu_large_sample_2023-06-09.RData")
gemtc_setting4_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting4_estimate_mu = colMeans(gemtc_setting4_mu)
knitr::opts_chunk$set(echo = TRUE)
mu1 = c(0.5,1)
mu2 = c(0,-0.5)
mu1[3] = mu1[1] - mu1[2]
mu2[3] = mu2[1] - mu2[2]
mu = c(mu1, mu2)
# setting 2
setting2_mu = NULL
setting2_var = NULL
setting3_mu = NULL
setting3_var = NULL
setting4_mu = NULL
setting4_var = NULL
for(i in 1:4){
setting2_filename = paste("sim_result_noadjust_large_sample_seed",i,"_2023-06-08.RData", sep="")
setting3_filename = paste("simulation_result_no_adjustment_unequal_correlation_seed",i,"_2023-06-08.RData", sep="")
setting4_filename = paste("simulation_result_no_adjustment_unequal_correlation_large_studies_seed",i,"_2023-06-08.RData", sep="")
load(setting2_filename)
setting2_mu = rbind(setting2_mu, posterior_mu)
setting2_var = rbind(setting2_var, mu_var_posterior)
load(setting3_filename)
setting3_mu = rbind(setting3_mu, posterior_mu)
setting3_var = rbind(setting3_var, mu_var_posterior)
load(setting4_filename)
setting4_mu = rbind(setting4_mu, posterior_mu)
setting4_var = rbind(setting4_var, mu_var_posterior)
}
setting2_estiamte_mu = colMeans(setting2_mu)
setting3_estiamte_mu = colMeans(setting3_mu)
setting4_estiamte_mu = colMeans(setting4_mu)
setting2_estiamte_var = colMeans(setting2_var)
setting3_estiamte_var = colMeans(setting3_var)
setting4_estiamte_var = colMeans(setting4_var)
load("netmeta_simulation_2023-06-09.RData")
netmeta_setting1_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting1_estimate_mu = colMeans(netmeta_setting1_mu)
netmeta_setting1_estimate_var = apply(netmeta_setting1_mu,2,var)
load("netmeta_sim_large_sample_2023-06-09.RData")
netmeta_setting2_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting2_estimate_mu = colMeans(netmeta_setting2_mu)
netmeta_setting2_estimate_var = apply(netmeta_setting2_mu,2,var)
load("netmeta_sim_unequal_correlation_2023-06-09.RData")
netmeta_setting3_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting3_estimate_mu = colMeans(netmeta_setting3_mu)
netmeta_setting3_estimate_var = apply(netmeta_setting3_mu,2,var)
load("netmeta_sim_large_sample_unequal_correlation_2023-06-09.RData")
netmeta_setting4_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting4_estimate_mu = colMeans(netmeta_setting4_mu)
netmeta_setting4_estimate_var = apply(netmeta_setting4_mu,2,var)
load("gemtc_simu_no_adjust_2023-06-09.RData")
gemtc_setting1_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting1_estimate_mu = colMeans(gemtc_setting1_mu)
load("gemtc_simu_large_sample_2023-06-09.RData")
gemtc_setting2_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting2_estimate_mu = colMeans(gemtc_setting2_mu)
load("gemtc_simu_unequal_correlation_2023-06-09.RData")
gemtc_setting3_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting3_estimate_mu = colMeans(gemtc_setting3_mu)
load("gemtc_simu_large_sample_2023-06-09.RData")
gemtc_setting4_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting4_estimate_mu = colMeans(gemtc_setting4_mu)
Method = c("BCL", "Netmeta","Gemtc")
trt = c("BA1", "CA1","BC1", "BA2", "CA2", "BC2")
setting1_bias = rbind(c(0.0106, 0.0073, 0.0033, 0.0177, 0.0066,0.0111),
abs(netmeta_setting1_estimate_mu - mu),
abs(gemtc_setting1_estimate_mu - mu))
rownames(setting1_bias) = Method
Method = c("BCL", "Netmeta","Gemtc")
rep(Method,3)
library(formattable)
install.packages("formattbale")
library(formattable)
library(dplyr)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
mu1 = c(0.5,1)
mu2 = c(0,-0.5)
mu1[3] = mu1[1] - mu1[2]
mu2[3] = mu2[1] - mu2[2]
mu = c(mu1, mu2)
# setting 2
setting2_mu = NULL
setting2_var = NULL
setting3_mu = NULL
setting3_var = NULL
setting4_mu = NULL
setting4_var = NULL
for(i in 1:4){
setting2_filename = paste("sim_result_noadjust_large_sample_seed",i,"_2023-06-08.RData", sep="")
setting3_filename = paste("simulation_result_no_adjustment_unequal_correlation_seed",i,"_2023-06-08.RData", sep="")
setting4_filename = paste("simulation_result_no_adjustment_unequal_correlation_large_studies_seed",i,"_2023-06-08.RData", sep="")
load(setting2_filename)
setting2_mu = rbind(setting2_mu, posterior_mu)
setting2_var = rbind(setting2_var, mu_var_posterior)
load(setting3_filename)
setting3_mu = rbind(setting3_mu, posterior_mu)
setting3_var = rbind(setting3_var, mu_var_posterior)
load(setting4_filename)
setting4_mu = rbind(setting4_mu, posterior_mu)
setting4_var = rbind(setting4_var, mu_var_posterior)
}
setting2_estiamte_mu = colMeans(setting2_mu)
setting3_estiamte_mu = colMeans(setting3_mu)
setting4_estiamte_mu = colMeans(setting4_mu)
setting2_estiamte_var = colMeans(setting2_var)
setting3_estiamte_var = colMeans(setting3_var)
setting4_estiamte_var = colMeans(setting4_var)
load("netmeta_simulation_2023-06-09.RData")
netmeta_setting1_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting1_estimate_mu = colMeans(netmeta_setting1_mu)
netmeta_setting1_estimate_var = apply(netmeta_setting1_mu,2,var)
load("netmeta_sim_large_sample_2023-06-09.RData")
netmeta_setting2_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting2_estimate_mu = colMeans(netmeta_setting2_mu)
netmeta_setting2_estimate_var = apply(netmeta_setting2_mu,2,var)
load("netmeta_sim_unequal_correlation_2023-06-09.RData")
netmeta_setting3_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting3_estimate_mu = colMeans(netmeta_setting3_mu)
netmeta_setting3_estimate_var = apply(netmeta_setting3_mu,2,var)
load("netmeta_sim_large_sample_unequal_correlation_2023-06-09.RData")
netmeta_setting4_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting4_estimate_mu = colMeans(netmeta_setting4_mu)
netmeta_setting4_estimate_var = apply(netmeta_setting4_mu,2,var)
load("gemtc_simu_no_adjust_2023-06-09.RData")
gemtc_setting1_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting1_estimate_mu = colMeans(gemtc_setting1_mu)
load("gemtc_simu_large_sample_2023-06-09.RData")
gemtc_setting2_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting2_estimate_mu = colMeans(gemtc_setting2_mu)
load("gemtc_simu_unequal_correlation_2023-06-09.RData")
gemtc_setting3_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting3_estimate_mu = colMeans(gemtc_setting3_mu)
load("gemtc_simu_large_sample_2023-06-09.RData")
gemtc_setting4_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting4_estimate_mu = colMeans(gemtc_setting4_mu)
Method = c("BCL", "Netmeta","Gemtc")
trt = c("BA1", "CA1","BC1", "BA2", "CA2", "BC2")
bias = rbind(c(0.0106, 0.0073, 0.0033, 0.0177, 0.0066,0.0111),
abs(netmeta_setting1_estimate_mu - mu),
abs(gemtc_setting1_estimate_mu - mu),
abs(setting2_estiamte_mu - mu),
abs(netmeta_setting2_estimate_mu - mu),
abs(gemtc_setting2_estimate_mu - mu),
abs(setting3_estiamte_mu - mu),
abs(netmeta_setting3_estimate_mu - mu),
abs(gemtc_setting3_estimate_mu - mu),
abs(setting4_estiamte_mu - mu),
abs(netmeta_setting4_estimate_mu - mu),
abs(gemtc_setting4_estimate_mu - mu)
)
Method = c("BCL", "Netmeta","Gemtc")
trt = c("BA1", "CA1","BC1", "BA2", "CA2", "BC2")
bias = rbind(c(0.0106, 0.0073, 0.0033, 0.0177, 0.0066,0.0111),
abs(netmeta_setting1_estimate_mu - mu),
abs(gemtc_setting1_estimate_mu - mu),
abs(setting2_estiamte_mu - mu),
abs(netmeta_setting2_estimate_mu - mu),
abs(gemtc_setting2_estimate_mu - mu),
abs(setting3_estiamte_mu - mu),
abs(netmeta_setting3_estimate_mu - mu),
abs(gemtc_setting3_estimate_mu - mu),
abs(setting4_estiamte_mu - mu),
abs(netmeta_setting4_estimate_mu - mu),
abs(gemtc_setting4_estimate_mu - mu)
)
kbl(bias,  caption = "Bias") %>%
kable_paper("striped", full_width = F) %>%
pack_rows("Setting 1: No adjustment ", 1, 3) %>%
pack_rows("Setting 2: Increase number of studies from 5 to 20", 4, 6) %>%
pack_rows("Setting 3: Change equal between study correlations (0.1) to unequal between study correlation (0.1 and 0.5)", 7, 9) %>%
pack_rows("Setting 4: Apply both setting 2 and setting 3", 10, 12)
Method = c("BCL", "Netmeta","Gemtc")
trt = c("BA1", "CA1","BC1", "BA2", "CA2", "BC2")
bias = rbind(c(0.0106, 0.0073, 0.0033, 0.0177, 0.0066,0.0111),
abs(netmeta_setting1_estimate_mu - mu),
abs(gemtc_setting1_estimate_mu - mu),
abs(setting2_estiamte_mu - mu),
abs(netmeta_setting2_estimate_mu - mu),
abs(gemtc_setting2_estimate_mu - mu),
abs(setting3_estiamte_mu - mu),
abs(netmeta_setting3_estimate_mu - mu),
abs(gemtc_setting3_estimate_mu - mu),
abs(setting4_estiamte_mu - mu),
abs(netmeta_setting4_estimate_mu - mu),
abs(gemtc_setting4_estimate_mu - mu)
)
kbl(round(bias,4),  caption = "Bias") %>%
kable_paper("striped", full_width = F) %>%
pack_rows("Setting 1: No adjustment ", 1, 3) %>%
pack_rows("Setting 2: Increase number of studies from 5 to 20", 4, 6) %>%
pack_rows("Setting 3: Change equal between study correlations (0.1) to unequal between study correlation (0.1 and 0.5)", 7, 9) %>%
pack_rows("Setting 4: Apply both setting 2 and setting 3", 10, 12)
library(dplyr)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
mu1 = c(0.5,1)
mu2 = c(0,-0.5)
mu1[3] = mu1[1] - mu1[2]
mu2[3] = mu2[1] - mu2[2]
mu = c(mu1, mu2)
# setting 2
setting2_mu = NULL
setting2_var = NULL
setting3_mu = NULL
setting3_var = NULL
setting4_mu = NULL
setting4_var = NULL
for(i in 1:4){
setting2_filename = paste("sim_result_noadjust_large_sample_seed",i,"_2023-06-08.RData", sep="")
setting3_filename = paste("simulation_result_no_adjustment_unequal_correlation_seed",i,"_2023-06-08.RData", sep="")
setting4_filename = paste("simulation_result_no_adjustment_unequal_correlation_large_studies_seed",i,"_2023-06-08.RData", sep="")
load(setting2_filename)
setting2_mu = rbind(setting2_mu, posterior_mu)
setting2_var = rbind(setting2_var, mu_var_posterior)
load(setting3_filename)
setting3_mu = rbind(setting3_mu, posterior_mu)
setting3_var = rbind(setting3_var, mu_var_posterior)
load(setting4_filename)
setting4_mu = rbind(setting4_mu, posterior_mu)
setting4_var = rbind(setting4_var, mu_var_posterior)
}
setting2_estiamte_mu = colMeans(setting2_mu)
setting3_estiamte_mu = colMeans(setting3_mu)
setting4_estiamte_mu = colMeans(setting4_mu)
setting2_estiamte_var = colMeans(setting2_var)
setting3_estiamte_var = colMeans(setting3_var)
setting4_estiamte_var = colMeans(setting4_var)
load("netmeta_simulation_2023-06-09.RData")
netmeta_setting1_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting1_estimate_mu = colMeans(netmeta_setting1_mu)
netmeta_setting1_estimate_var = apply(netmeta_setting1_mu,2,var)
load("netmeta_sim_large_sample_2023-06-09.RData")
netmeta_setting2_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting2_estimate_mu = colMeans(netmeta_setting2_mu)
netmeta_setting2_estimate_var = apply(netmeta_setting2_mu,2,var)
load("netmeta_sim_unequal_correlation_2023-06-09.RData")
netmeta_setting3_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting3_estimate_mu = colMeans(netmeta_setting3_mu)
netmeta_setting3_estimate_var = apply(netmeta_setting3_mu,2,var)
load("netmeta_sim_large_sample_unequal_correlation_2023-06-09.RData")
netmeta_setting4_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting4_estimate_mu = colMeans(netmeta_setting4_mu)
netmeta_setting4_estimate_var = apply(netmeta_setting4_mu,2,var)
load("gemtc_simu_no_adjust_2023-06-09.RData")
gemtc_setting1_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting1_estimate_mu = colMeans(gemtc_setting1_mu)
gemtc_setting1_estimate_var = apply(gemtc_setting1_mu,2,var)
load("gemtc_simu_large_sample_2023-06-09.RData")
gemtc_setting2_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting2_estimate_mu = colMeans(gemtc_setting2_mu)
gemtc_setting2_estimate_var = apply(gemtc_setting2_mu,2,var)
load("gemtc_simu_unequal_correlation_2023-06-09.RData")
gemtc_setting3_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting3_estimate_mu = colMeans(gemtc_setting3_mu)
gemtc_setting3_estimate_var = apply(gemtc_setting3_mu,2,var)
load("gemtc_simu_large_sample_2023-06-09.RData")
gemtc_setting4_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting4_estimate_mu = colMeans(gemtc_setting4_mu)
gemtc_setting4_estimate_var = apply(gemtc_setting4_mu,2,var)
method = c("BCL", "Netmeta","Gemtc")
trt = c("BA1", "CA1","BC1", "BA2", "CA2", "BC2")
bias = rbind(c(0.0106, 0.0073, 0.0033, 0.0177, 0.0066,0.0111),
abs(netmeta_setting1_estimate_mu - mu),
abs(gemtc_setting1_estimate_mu - mu),
abs(setting2_estiamte_mu - mu),
abs(netmeta_setting2_estimate_mu - mu),
abs(gemtc_setting2_estimate_mu - mu),
abs(setting3_estiamte_mu - mu),
abs(netmeta_setting3_estimate_mu - mu),
abs(gemtc_setting3_estimate_mu - mu),
abs(setting4_estiamte_mu - mu),
abs(netmeta_setting4_estimate_mu - mu),
abs(gemtc_setting4_estimate_mu - mu)
)
colnames(bias) = trt
rownames(bias) = rep(method,4)
kbl(round(bias,4)) %>%
kable_paper("striped", full_width = F) %>%
pack_rows("Setting 1: No adjustment ", 1, 3) %>%
pack_rows("Setting 2: Increase number of studies from 5 to 20", 4, 6) %>%
pack_rows("Setting 3: Change equal between study correlations (0.1) to unequal between study correlation (0.1 and 0.5)", 7, 9) %>%
pack_rows("Setting 4: Apply both setting 2 and setting 3", 10, 12)
library(dplyr)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
mu1 = c(0.5,1)
mu2 = c(0,-0.5)
mu1[3] = mu1[1] - mu1[2]
mu2[3] = mu2[1] - mu2[2]
mu = c(mu1, mu2)
# setting 2
setting2_mu = NULL
setting2_var = NULL
setting3_mu = NULL
setting3_var = NULL
setting4_mu = NULL
setting4_var = NULL
for(i in 1:4){
setting2_filename = paste("sim_result_noadjust_large_sample_seed",i,"_2023-06-08.RData", sep="")
setting3_filename = paste("simulation_result_no_adjustment_unequal_correlation_seed",i,"_2023-06-08.RData", sep="")
setting4_filename = paste("simulation_result_no_adjustment_unequal_correlation_large_studies_seed",i,"_2023-06-08.RData", sep="")
load(setting2_filename)
setting2_mu = rbind(setting2_mu, posterior_mu)
setting2_var = rbind(setting2_var, mu_var_posterior)
load(setting3_filename)
setting3_mu = rbind(setting3_mu, posterior_mu)
setting3_var = rbind(setting3_var, mu_var_posterior)
load(setting4_filename)
setting4_mu = rbind(setting4_mu, posterior_mu)
setting4_var = rbind(setting4_var, mu_var_posterior)
}
setting2_estiamte_mu = colMeans(setting2_mu)
setting3_estiamte_mu = colMeans(setting3_mu)
setting4_estiamte_mu = colMeans(setting4_mu)
setting2_estiamte_var = colMeans(setting2_var)
setting3_estiamte_var = colMeans(setting3_var)
setting4_estiamte_var = colMeans(setting4_var)
load("netmeta_simulation_2023-06-09.RData")
netmeta_setting1_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting1_estimate_mu = colMeans(netmeta_setting1_mu)
netmeta_setting1_estimate_var = apply(netmeta_setting1_mu,2,var)
load("netmeta_sim_large_sample_2023-06-09.RData")
netmeta_setting2_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting2_estimate_mu = colMeans(netmeta_setting2_mu)
netmeta_setting2_estimate_var = apply(netmeta_setting2_mu,2,var)
load("netmeta_sim_unequal_correlation_2023-06-09.RData")
netmeta_setting3_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting3_estimate_mu = colMeans(netmeta_setting3_mu)
netmeta_setting3_estimate_var = apply(netmeta_setting3_mu,2,var)
load("netmeta_sim_large_sample_unequal_correlation_2023-06-09.RData")
netmeta_setting4_mu = cbind(estimated_mu1, estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2, estimated_mu2[,1] - estimated_mu2[,2])
netmeta_setting4_estimate_mu = colMeans(netmeta_setting4_mu)
netmeta_setting4_estimate_var = apply(netmeta_setting4_mu,2,var)
load("gemtc_simu_no_adjust_2023-06-09.RData")
gemtc_setting1_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting1_estimate_mu = colMeans(gemtc_setting1_mu)
gemtc_setting1_estimate_var = apply(gemtc_setting1_mu,2,var)
load("gemtc_simu_large_sample_2023-06-09.RData")
gemtc_setting2_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting2_estimate_mu = colMeans(gemtc_setting2_mu)
gemtc_setting2_estimate_var = apply(gemtc_setting2_mu,2,var)
load("gemtc_simu_unequal_correlation_2023-06-09.RData")
gemtc_setting3_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting3_estimate_mu = colMeans(gemtc_setting3_mu)
gemtc_setting3_estimate_var = apply(gemtc_setting3_mu,2,var)
load("gemtc_simu_large_sample_2023-06-09.RData")
gemtc_setting4_mu = cbind(estimated_mu1[,1:2], estimated_mu1[,1] - estimated_mu1[,2],
estimated_mu2[,1:2], estimated_mu2[,1] - estimated_mu2[,2])
gemtc_setting4_estimate_mu = colMeans(gemtc_setting4_mu)
gemtc_setting4_estimate_var = apply(gemtc_setting4_mu,2,var)
method = c("BCL", "Netmeta","Gemtc")
trt = c("BA1", "CA1","BC1", "BA2", "CA2", "BC2")
bias = rbind(c(0.0106, 0.0073, 0.0033, 0.0177, 0.0066,0.0111),
abs(netmeta_setting1_estimate_mu - mu),
abs(gemtc_setting1_estimate_mu - mu),
abs(setting2_estiamte_mu - mu),
abs(netmeta_setting2_estimate_mu - mu),
abs(gemtc_setting2_estimate_mu - mu),
abs(setting3_estiamte_mu - mu),
abs(netmeta_setting3_estimate_mu - mu),
abs(gemtc_setting3_estimate_mu - mu),
abs(setting4_estiamte_mu - mu),
abs(netmeta_setting4_estimate_mu - mu),
abs(gemtc_setting4_estimate_mu - mu)
)
colnames(bias) = trt
rownames(bias) = rep(method,4)
kbl(round(bias,4)) %>%
kable_paper("striped", full_width = F) %>%
pack_rows("Setting 1: No adjustment ", 1, 3) %>%
pack_rows("Setting 2: Increase number of studies from 5 to 20", 4, 6) %>%
pack_rows("Setting 3: Change equal between study correlations (0.1) to unequal between study correlation (0.1 and 0.5)", 7, 9) %>%
pack_rows("Setting 4: Apply both setting 2 and setting 3", 10, 12)
vars = rbind(c(0.0198, 0.0197, 0.0201, 0.0198, 0.0198, 0.0200),
netmeta_setting4_estimate_var,
getmtc_setting4_estimate_var,
setting2_estiamte_var,
netmeta_setting2_estimate_var,
getmtc_setting2_estimate_var,
setting3_estiamte_var,
netmeta_setting3_estimate_var,
getmtc_setting3_estimate_var,
setting4_estiamte_var,
netmeta_setting4_estimate_var,
getmtc_setting4_estimate_var)
